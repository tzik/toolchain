commit 786ca1052347681c8e5aaaab257202792ba68151
Author: Anders F Bj√∂rklund <anders.f.bjorklund@gmail.com>
Date:   Mon Nov 26 15:16:24 2018

    Handle bug where clang doesn't unlink output file
    
    When using assembler, clang doesn't unlink output.
    
    On the other hand, gcc seems to handle this fine ?
    
    Closes #331

diff --git a/src/ccache.c b/src/ccache.c
index b30dcbb..0518d33 100644
--- a/src/ccache.c
+++ b/src/ccache.c
@@ -1242,6 +1242,9 @@ to_cache(struct args *args)
 	args_add(args, "-o");
 	args_add(args, output_obj);
 
+	if (conf->hard_link)
+		x_unlink(output_obj);
+
 	if (generating_diagnostics) {
 		args_add(args, "--serialize-diagnostics");
 		args_add(args, output_dia);
diff --git a/test/suites/hardlink.bash b/test/suites/hardlink.bash
index f4f969e..bc93018 100644
--- a/test/suites/hardlink.bash
+++ b/test/suites/hardlink.bash
@@ -30,4 +30,34 @@ SUITE_hardlink() {
     if [ ! $obj_in_cache -ef test1.o ]; then
         test_failed "Object file not hard-linked to cached object file"
     fi
+
+    # -------------------------------------------------------------------------
+    TEST "Overwrite assembler"
+
+    generate_code 1 test1.c
+    $REAL_COMPILER -S -o test1.s test1.c
+
+    $REAL_COMPILER -c -o reference_test1.o test1.s
+
+    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.s
+    expect_stat 'cache hit (preprocessed)' 0
+    expect_stat 'cache miss' 1
+    expect_stat 'files in cache' 1
+
+    generate_code 2 test1.c
+    $REAL_COMPILER -S -o test1.s test1.c
+
+    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.s
+    expect_stat 'cache hit (preprocessed)' 0
+    expect_stat 'cache miss' 2
+    expect_stat 'files in cache' 2
+
+    generate_code 1 test1.c
+    $REAL_COMPILER -S -o test1.s test1.c
+
+    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.s
+    expect_stat 'cache hit (preprocessed)' 1
+    expect_stat 'cache miss' 2
+    expect_stat 'files in cache' 2
+    expect_equal_object_files reference_test1.o test1.o
 }
